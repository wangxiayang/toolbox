#!/bin/bash
# record all compilation events to be used later for llvm-ir extraction

ROOTDIR=
if [ -z $ROOTDIR ]; then
	echo "error: no rootdir specified in $0"
	exit 1
fi

MAKEFILE_NAME=$ROOTDIR/Makefile.llvmir
LOG_NAME=$ROOTDIR/Makefile.llvmir.log
PWD=`pwd`

GCC=/usr/bin/gcc
CLANG=clang
LLVM_LINK=llvm-link

if [ -e $MAKEFILE_NAME ]; then
	line1=`head -n 1 $MAKEFILE_NAME`
	if [ "$line1" != "# auto-generated by gcc-wrapper" ]; then
		echo "error: $MAKEFILE_NAME exists for other purpose"
		exit 1
	fi
else
	echo "# auto-generated by gcc-wrapper" > $MAKEFILE_NAME
fi

$GCC $@
exit_status=$?

if [ $exit_status != 0 ]; then
	exit $exit_status
fi

PARAMS=($@)
LINK_MODE=yes
for idx in `seq 0 $(($#-1))`; do
	arg=${PARAMS[${idx}]}
	case $arg in
		-M*)
			DEP_MODE=yes
			LINK_MODE=no;;
		-S)
			LINK_MODE=no;;
		-c)
			LINK_MODE=no;;
		-E)
			LINK_MODE=no;;
		-o)
			nextidx=$(($idx+1))
			OUTFILE=${PARAMS[$nextidx]}
			if [[ $OUTFILE == *.o	]]; then
				OUTFILE=${OUTFILE/%.o/.bc}
				PARAMS[${nextidx}]=$OUTFILE
			fi;;
		-*)
			;;
		*)
			if [ "$arg" != "$OUTFILE" ]; then
				INPUTFILES="$INPUTFILES $arg"
			fi;;
	esac
done

# TODO: the project may be recompiled
# grep returns 0 if found, 1 if not found
if [ "$LINK_MODE"	== "yes" ]; then
	INPUTFILES=${INPUTFILES//.o/.bc}
	INPUTFILES=${INPUTFILES//.a/.a.bc}
	if [ -z $OUTFILE ]; then
		echo "a.out: #$INPUTFILES" >> $MAKEFILE_NAME
		echo "#pwd=$PWD cmd=$0 $@" >> $MAKEFILE_NAME
		echo "" >> $MAKEFILE_NAME
	else
		echo "$OUTFILE.out.bc: #$INPUTFILES" >> $MAKEFILE_NAME
		echo -e \\\t"cd ${PWD} ; $LLVM_LINK $INPUTFILES -o $OUTFILE.out.bc" >> $MAKEFILE_NAME
	fi
	echo "" >> $MAKEFILE_NAME
elif [ "$DEP_MODE" != "yes" ]; then
	$CLANG ${PARAMS[@]} -emit-llvm 2>/dev/null >/dev/null
	echo "$CLANG ${PARAMS[@]} -emit-llvm" >> $LOG_NAME
fi

exit $exit_status
