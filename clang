#!/bin/bash
# record all clang compilation events to be used later for llvm-ir extraction

ROOTDIR=
if [ -z $ROOTDIR ]; then
	echo "error: no rootdir specified in $0"
	exit 1
fi

MAKEFILE_NAME=$ROOTDIR/Makefile.llvmir
LOG_NAME=$ROOTDIR/Makefile.llvmir.log
PWD=`pwd`

CLANG=clang
LLVM_LINK=llvm-link

if [ -e $MAKEFILE_NAME ]; then
	line1=`head -n 1 $MAKEFILE_NAME`
	if [ "$line1" != "# auto-generated by clang-wrapper" ]; then
		echo "error: $MAKEFILE_NAME exists for other purpose"
		exit 1
	fi
else
	echo "# auto-generated by clang-wrapper" > $MAKEFILE_NAME
fi

$CLANG $@ 2>/dev/null
exit_status=$?

if [ $exit_status != 0 ]; then
	exit $exit_status
fi

PARAMS=($@)

LINK_MODE=yes
ASSEMBLE_MODE=no
COMPILE_MODE=no
PRECOMPILE_MODE=no	# unused
# determine the modes
for idx in `seq 0 $(($#-1))`; do
	arg=${PARAMS[${idx}]}

	case $arg in
		-M*)
			DEP_MODE=yes
			LINK_MODE=no;;
		-S)
			ASSEMBLE_MODE=yes
			LINK_MODE=no;;
		-c)
			COMPILE_MODE=yes
			LINK_MODE=no;;
		-E)
			PRECOMPILE_MODE=yes
			LINK_MODE=no;;
		*)
			;;
	esac
done

# replace outfile name
for idx in `seq 0 $(($#-1))`; do
	arg=${PARAMS[${idx}]}

	case $arg in
		-o)
			nextidx=$(($idx+1))
			OUTFILE=${PARAMS[$nextidx]}
			if [ $ASSEMBLE_MODE == "yes" ]; then
				OUTFILE=${OUTFILE/%.s/.ll}
				PARAMS[${nextidx}]=$OUTFILE
			fi
			if [ $COMPILE_MODE == "yes"	]; then
				OUTFILE=${OUTFILE/%.o/.bc}
				PARAMS[${nextidx}]=$OUTFILE
			fi;;
		-*)
			;;
		*)
			;;
	esac
done

# append inputfile names
for idx in `seq 0 $(($#-1))`; do
	arg=${PARAMS[${idx}]}

	case $arg in
		-*)
			;;
		*)
			if [ "$arg" != "$OUTFILE" ]; then
				if [ $COMPILE_MODE == "yes" ] && [[ $arg == *.S ]]; then
					# .S -> .o, will generate an empty .bc file
					GENERATE_EMPTY_BC=yes
				fi
				INPUTFILES="$INPUTFILES $arg"
			fi;;
	esac
done

# TODO: the project may be recompiled
# grep returns 0 if found, 1 if not found
if [ "$LINK_MODE"	== "yes" ]; then
	INPUTFILES=${INPUTFILES//.o/.bc}
	INPUTFILES=${INPUTFILES//.a/.a.bc}
	if [ -z $OUTFILE ]; then
		echo "a.out: #$INPUTFILES" >> $MAKEFILE_NAME
		echo "#pwd=$PWD cmd=$0 $@" >> $MAKEFILE_NAME
		echo "" >> $MAKEFILE_NAME
	else
		echo "$OUTFILE.out.bc: #$INPUTFILES" >> $MAKEFILE_NAME
		echo -e \\\t"cd ${PWD} ; $LLVM_LINK $INPUTFILES -o $OUTFILE.out.bc" >> $MAKEFILE_NAME
	fi
	echo "" >> $MAKEFILE_NAME
elif [ "$DEP_MODE" != "yes" ]; then
	if [ -z $GENERATE_EMPTY_BC ]; then
		echo "$CLANG ${PARAMS[@]} -emit-llvm" >> $LOG_NAME
		$CLANG ${PARAMS[@]} -emit-llvm 2>>$LOG_NAME >>$LOG_NAME
	else
		echo "touch $OUTFILE" >> $LOG_NAME
		touch $OUTFILE
	fi
fi

exit $exit_status
